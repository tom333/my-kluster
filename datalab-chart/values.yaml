minio:
  replicas: 1
  mode: standalone
  persistence:
    size: 10Gi
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    path: /
    hosts:
      - minio.tgu.ovh
    tls:
      - secretName: minio-tls
        hosts:
          - minio.tgu.ovh
  consoleIngress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    paths: /
    hosts:
      - minio-console.tgu.ovh
    tls:
      - secretName: minio-console-tls
        hosts:
          - minio-console.tgu.ovh
  environment:
    MINIO_BROWSER_REDIRECT_URL: https://minio-console.tgu.ovh
mlflow: 
  strategy:
    type: Recreate

  extraVolumes:
    - name: mlflow-volume
      persistentVolumeClaim:
        claimName: mlflow-pvc

  extraVolumeMounts:
    - name: mlflow-volume
      mountPath: /mlflow/data

  backendStore:
    defaultSqlitePath: "/mlflow/data/mlflow.db"

  artifactRoot:
    proxiedArtifactStorage: true
    defaultArtifactsDestination: "/mlflow/data/mlartifacts"

  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/proxy-body-size: 512m
      # nginx.ingress.kubernetes.io/auth-url: "https://auth.tgu.ovh/oauth2/auth"
      # nginx.ingress.kubernetes.io/auth-signin: "https://auth.tgu.ovh/oauth2/start?rd=https://mlflow.tgu.ovh"
    hosts:
      - host: mlflow.tgu.ovh
        paths:
        - path: /
          pathType: ImplementationSpecific
    tls:
      - secretName: mlflow-tls
        hosts:
          - mlflow.tgu.ovh
  auth:
    enabled: false
# PostgreSQL Configuration
postgresql:
  enabled: true
  global:
    postgresql:
      auth:
        database: metaflow
        username: metaflow
        password: password
  primary:
    extendedConfiguration: |-
      max_connections = 100
      shared_buffers = 128MB
      work_mem = 4MB
    persistence:
      size: 8Gi
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi

metaflow:
  # Metadata Service Configuration
  metadataService:
    image:
      repository: netflixoss/metaflow_metadata_service
      tag: latest
    db:
      host: lab-postgresql.datalab.svc.cluster.local
      port: 5432
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 200m
        memory: 256Mi

  # UI Configuration
  ui:
    image:
      repository: public.ecr.aws/outerbounds/metaflow_ui
      tag: 1.3.13
    serviceUrl: https://{{ .Values.metaflow.ingress.host }}
    internalServiceUrl: http://{{ include "datalab.fullname" . }}-metaflow-backend:8083
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi

  # Ingress Configuration
  ingress:
    enabled: true
    className: public
    host: metaflow.tgu.ovh
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    #  nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0
    tls:
      - secretName: metaflow-secret-tls
        hosts:
          - metaflow.tgu.ovh

  # S3 Configuration
  s3:
    enabled: true
    bucket_sysroot: s3://metaflow/metaflow
    bucket_root: s3://metaflow/data
    accessKeyId: STEFqvyfCgIGtd1uB7Ho
    secretAccessKey: rnWldZiezsOwfG7Qbxhhq1cauAwIQimBNPRVLhMb
    defaultRegion: us-east-1
    endpoint: http://lab-minio.datalab.svc.cluster.local:9000
  service:
    #Â namespace: user-thomasguyader
    METAFLOW_DATASTORE_SYSROOT_S3: s3://metaflow
