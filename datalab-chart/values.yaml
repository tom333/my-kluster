minio:
  replicas: 1
  mode: standalone
  persistence:
    size: 10Gi
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    path: /
    hosts:
      - minio.tgu.ovh
    tls:
      - secretName: minio-tls
        hosts:
          - minio.tgu.ovh
  consoleIngress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    paths: /
    hosts:
      - minio-console.tgu.ovh
    tls:
      - secretName: minio-console-tls
        hosts:
          - minio-console.tgu.ovh
  environment:
    MINIO_BROWSER_REDIRECT_URL: https://minio-console.tgu.ovh
mlflow: 
  strategy:
    type: Recreate

  extraVolumes:
    - name: mlflow-volume
      persistentVolumeClaim:
        claimName: mlflow-pvc

  extraVolumeMounts:
    - name: mlflow-volume
      mountPath: /mlflow/data

  backendStore:
    defaultSqlitePath: "/mlflow/data/mlflow.db"

  artifactRoot:
    proxiedArtifactStorage: true
    defaultArtifactsDestination: "/mlflow/data/mlartifacts"

  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/proxy-body-size: 512m
      # nginx.ingress.kubernetes.io/auth-url: "https://auth.tgu.ovh/oauth2/auth"
      # nginx.ingress.kubernetes.io/auth-signin: "https://auth.tgu.ovh/oauth2/start?rd=https://mlflow.tgu.ovh"
    hosts:
      - host: mlflow.tgu.ovh
        paths:
        - path: /
          pathType: ImplementationSpecific
    tls:
      - secretName: mlflow-tls
        hosts:
          - mlflow.tgu.ovh
  auth:
    enabled: false
mariadb:
  auth:
    user: "zenml"
    password: "zenml"
    database: "zenml"
    rootPassword: "password"
zenml:
  database:
    url: "mysql://zenml:zenml@lab-mariadb.datalab.svc.cluster.local:3306/zenml"
  ingress:
    enabled: true
    annotations: 
      cert-manager.io/cluster-issuer: letsencrypt-prod        
    host: zenml.tgu.ovh
    tls:
      enabled: true
  deploymentType: local