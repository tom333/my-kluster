apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: code-server
  namespace: argocd
spec:
  destination:
    namespace: datalab
    server: https://kubernetes.default.svc
  project: datalab-project
  source:
    path: ci/helm-chart
    repoURL: https://github.com/coder/code-server.git
    targetRevision: HEAD
    helm:
      values: |
        image:
          repository: tom333/coder
          tag: 'latest'
        ingress:
          enabled: true
          ingressClassName: pomerium
          hosts:
            - host: code.tgu.ovh
              paths:
                - /
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-prod"
            ingress.pomerium.io/allowed_users: |
              - laboitatom@gmail.com
            ingress.pomerium.io/allow_any_authenticated_user: 'true'
            ingress.pomerium.io/allow_websockets: 'true'
          tls:
            - hosts:
                - code.tgu.ovh
              secretName: code-tls
        extraArgs:
          - --auth
          - none
        extraVars:
          - name: MLFLOW_TRACKING_URI
            value: http://mlflow.datalab.svc.cluster.local:5000
          - name: MLFLOW_S3_ENDPOINT_URL
            value: http:/minio.datalab.svc.cluster.local:9000
        extraInitContainers:
          - name: customization
            image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
            imagePullPolicy: IfNotPresent
            env:
              - name: SERVICE_URL
                value: https://open-vsx.org/vscode/gallery
              - name: ITEM_URL
                value: https://open-vsx.org/vscode/item
            command:
              - sh
              - -c
              - |
                code-server --install-extension ms-python.python
                sudo apt update -y && sudo apt install -y python python3-distutils python3-pip python3-virtualenv make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
                curl -sSL https://install.python-poetry.org | python3 -
                echo 'PATH="/home/coder/.local/bin:$PATH"' > ~/.bashrc
                curl https://pyenv.run | bash
                echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
                echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
                echo 'eval "$(pyenv init -)"' >> ~/.bashrc
            volumeMounts:
              - name: data
                mountPath: /home/coder

  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated:
      selfHeal: true
      prune: true
      allowEmpty: true
