apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: openmetadata-dependencies
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: openmetadata
    server: https://kubernetes.default.svc
  project: infra-project
  source:
    repoURL: https://helm.open-metadata.org/
    targetRevision: 1.9.10
    chart: openmetadata-dependencies
    helm:
      values: |
        mysql:
          enabled: false
          image:
            registry: docker.io
            repository: bitnami/mysql
            tag: 9.4.0-debian-12-r1
          primary:
            enabled: true
            ## Initializing the database could take some time
            ##
            #initialDelaySeconds: 120
            initialDelaySeconds: 300
            periodSeconds: 30
            timeoutSeconds: 150
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            enabled: true
            initialDelaySeconds: 300
            periodSeconds: 30
            timeoutSeconds: 150
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            enabled: false
            ## Initializing the database could take some time
            ##
            #initialDelaySeconds: 120
            initialDelaySeconds: 300
            periodSeconds: 30
            timeoutSeconds: 10
            successThreshold: 1
        
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: mysql-openmetadata
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: openmetadata
    server: https://kubernetes.default.svc
  project: infra-project
  source:
    repoURL: registry-1.docker.io/bitnamicharts
    targetRevision: 14.0.3
    chart: mysql
    helm:
      values: | 
        fullnameOverride: "mysql"
        architecture: standalone
        auth:
          rootPassword: password    # to be provided by CI/CD
        initdbScripts:
          init_openmetadata_db_scripts.sql: |
            CREATE DATABASE openmetadata_db;
            CREATE USER 'openmetadata_user'@'%' IDENTIFIED BY 'openmetadata_password';
            GRANT ALL PRIVILEGES ON openmetadata_db.* TO 'openmetadata_user'@'%' WITH GRANT OPTION;
            commit;
          init_airflow_db_scripts.sql: |
            CREATE DATABASE airflow_db CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
            CREATE USER 'airflow_user'@'%' IDENTIFIED BY 'airflow_pass';
            GRANT ALL PRIVILEGES ON airflow_db.* TO 'airflow_user'@'%' WITH GRANT OPTION;
            commit;
        primary:
          extraFlags: "--sort_buffer_size=10M"
          persistence:
            size: 5Gi
          service:
            nodePort: 3306
          livenessProbe:
              enabled: true
              initialDelaySeconds: 300
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 45
              successThreshold: 1
          readinessProbe:
              enabled: true
              initialDelaySeconds: 300
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 45
              successThreshold: 1
          startupProbe:
              enabled: false
              initialDelaySeconds: 300
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 45
              successThreshold: 1
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated:
      selfHeal: true
      prune: true

# ---
# apiVersion: argoproj.io/v1alpha1
# kind: Application
# metadata:
#   name: openmetadata
#   namespace: argocd
#   finalizers:
#     - resources-finalizer.argocd.argoproj.io
# spec:
#   destination:
#     namespace: openmetadata
#     server: https://kubernetes.default.svc
#   project: infra-project
#   source:
#     repoURL: https://helm.open-metadata.org/
#     targetRevision: 1.9.10
#     chart: openmetadata
#     helm:
#       values: |
#         ingress:
#           enabled: true
#           className: ""
#           annotations: 
#             cert-manager.io/cluster-issuer: "letsencrypt-prod"
#           hosts:
#             - host: openmetadata.tgu.ovh
#               paths:
#                 - path: /
#                   pathType: ImplementationSpecific
#           tls: 
#             - secretName: tls-open-metadata
#               hosts:
#                 - openmetadata.tgu.ovh
#   syncPolicy:
#     syncOptions:
#       - CreateNamespace=true
#     automated:
#       selfHeal: true
#       prune: true
