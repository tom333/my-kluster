apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: datahub-prerequisites
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: datahub
    server: https://kubernetes.default.svc
  project: infra-project
  source:
    repoURL: https://helm.datahubproject.io/
    targetRevision: 0.1.15
    chart: datahub-prerequisites
    helm:
      values: |
        postgresql:
          enabled: true
          global:
            postgresql:
              auth:
                username: datahub
                password: datahub
                database: datahub
          image:
            registry: docker.io
            repository: bitnamilegacy/postgresql
            tag: 14.3.0-debian-11-r5

        mysql:
          enabled: false
        elasticsearch:
          # set this to false, if you want to provide your own ES instance.
          enabled: false
        
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated:
      selfHeal: true
      prune: true
---
# apiVersion: argoproj.io/v1alpha1
# kind: Application
# metadata:
#   name: datahub-elastic
#   namespace: argocd
#   finalizers:
#     - resources-finalizer.argocd.argoproj.io
# spec:
#   destination:
#     namespace: datahub
#     server: https://kubernetes.default.svc
#   project: infra-project
#   source:
#     repoURL: https://helm.elastic.co
#     targetRevision: 8.5.1
#     chart: elasticsearch
#     helm:
#       values: |
#         replicas: 1
#         minimumMasterNodes: 1
#         antiAffinity: "soft"
#         clusterHealthCheckParams: "wait_for_status=yellow&timeout=1s"
#         esJavaOpts: "-Xmx512m -Xms512m"
#         protocol: https
#         createCert: true
#         resources:
#           requests:
#             cpu: "100m"
#             memory: "1024M"
#           limits:
#             cpu: "1000m"
#             memory: "1024M"
        
#   syncPolicy:
#     syncOptions:
#       - CreateNamespace=true
#     automated:
#       selfHeal: true
#       prune: true

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: datahub-opensearch
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: datahub
    server: https://kubernetes.default.svc
  project: infra-project
  source:
    repoURL: https://opensearch-project.github.io/helm-charts
    targetRevision: 3.2.1
    chart: opensearch
    helm:
      values: |
        singleNode: true
        replicas: 1
        minimumMasterNodes: 1
        antiAffinity: "soft"
        clusterHealthCheckParams: "wait_for_status=yellow&timeout=1s"
        esJavaOpts: "-Xmx512m -Xms512m"
        protocol: https
        securityConfig:
          enabled: false
        createCert: true
        basicAuth:
          enabled: true
        resources:
          requests:
            cpu: "100m"
            memory: "1024M"
          limits:
            cpu: "1000m"
            memory: "1024M"
        extraEnvs:
          - name: OPENSEARCH_INITIAL_ADMIN_PASSWORD
            value: strong-Passw0rd
        
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated:
      selfHeal: true
      prune: true

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: datahub
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: datahub
    server: https://kubernetes.default.svc
  project: infra-project
  source:
    repoURL: https://helm.datahubproject.io/
    targetRevision: 0.6.21
    chart: datahub
    helm:
      values: |
        datahub-frontend:
          ingress:
            enabled: true
            annotations:
              cert-manager.io/cluster-issuer: "letsencrypt-prod"
            hosts:
              - host: datahub.tgu.ovh
                path: 
                  - /
                pathType: Prefix
            tls:
              - secretName: datahub-tls
                hosts:
                  - datahub.tgu.ovh
        mysqlSetupJob:
          enabled: false
        postgresqlSetupJob:
          enabled: true
        global:
          datahub_analytics_enabled: false
          kafka:
            bootstrap:
              server: "datahub-prerequisites-kafka:9092"
            zookeeper:
              server: "datahub-prerequisites-zookeeper:2181"
          elasticsearch:
            host: "opensearch-cluster-master"
            skipcheck: "true"
            insecure: "true"
            useSSL: "true"
            auth:
              username: admin
              password: 
                value: strong-Passw0rd
            #     secretRef: elasticsearch-master-credentials
            #     secretKey: password
          sql:
            datasource:
              host: "datahub-prerequisites-postgresql:5432"
              hostForpostgresqlClient: "datahub-prerequisites-postgresql"
              port: "5432"
              url: "jdbc:postgresql://datahub-prerequisites-postgresql:5432/datahub"
              driver: "org.postgresql.Driver"
              username: "datahub"
              password:
                value: datahub
          datahub:
            frontend:
              validateSignUpEmail: true
            monitoring:
              enablePrometheus: false
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated:
      selfHeal: true
      prune: true
